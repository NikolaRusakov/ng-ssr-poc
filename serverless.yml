# generated by @ng-toolkit/serverless
service: some-awesome-project

plugins:
  - serverless-apigw-binary

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  timeout: 10
  stage: dev
  region: eu-west-1

package:
  exclude:
   - src/**
   - node_modules/**
   - firebug-lite/**
   - e2e/**
   - coverage/**
   - '!node_modules/aws-serverless-express/**'
   - '!node_modules/binary-case/**'
   - '!node_modules/type-is/**'
   - '!node_modules/media-typer/**'
   - '!node_modules/mime-types/**'
   - '!node_modules/mime-db/**'

custom:
  apigwBinary:
    types:
      - '*/*'
functions:
  ssr:
    name: ${self:service}-${self:provider.stage}-ssrDemo
    handler: lambda.ssr
    description: Deployed SSR PoC project on lambda
    events:
      - http: ANY {proxy+}
      - http: ANY /
resources:
  Resources:
    # Lambda execution
    LambdaServiceRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: ${self:service}-${self:provider.stage}-ssr_role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Principal:
                Service:
                  - 'apigateway.amazonaws.com'
                  - 'lambda.amazonaws.com'
              Action:
                - 'sts:AssumeRole'
        Policies:
          - PolicyName: ${self:service}-${self:provider.stage}-poc-ssr
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'lambda:invokeFunction'
                  Resource:
                    - '*'
